from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import types, Dispatcher, asyncio
from bot import dp, bot
from aiogram.dispatcher.filters import Text
from markups import inline, keyboards
from data_base import rekruter_data



class FSMlead(StatesGroup):
	name = State()
	town = State()
	age = State()
	phone = State()


# –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏: –í–µ—Ä—Ö–Ω—è—è –±–æ–ª—å—à–∞—è "–í–∞–∫–∞–Ω—Å–∏—è" - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏–¥–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π, –¥–≤–µ –¥—Ä—É–≥–∏–µ —ç—Ç–æ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –Ω–∞—à —Å–∞–π—Ç (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –ø–æ–¥ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏)



async def firs_event(message : types.Message):
	await FSMlead.name.set()
	await message.reply("–ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?", reply_markup=types.ReplyKeyboardRemove())

async def cancel(message: types.Message, state : FSMContext):
	current_state = await state.get_state()
	if current_state is None:
		return
	await state.finish()

async def name_lead(message : types.Message, state : FSMContext):
	async with state.proxy() as data:
		data['name'] = message.text
	await FSMlead.next()
	await message.reply("–í –Ω–∞—à –¥—Ä—É–∂–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ç–∏–≤üë®‚Äçüëß‚Äçüë¶, —Ç—Ä–µ–±—É—é—Ç—Å—è –±—É–¥—É—â–∏–µ –∏ –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–µ–ª–∏. –ï—Å–ª–∏ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã —É —Ç–µ–±—è –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ. –ú—ã —Ö–æ—Ç–∏–º –Ω–∞—É—á–∏—Ç—å —Ç–µ–±—è –∏ –¥–∞–∂–µ üíµ –∑–∞–ø–ª–∞—Ç–∏–º –∑–∞ –æ–±—É—á–µ–Ω–∏–µ üíµ (–ø–æ —É—Å–ª–æ–≤–∏—è–º —Ä–∞–±–æ—Ç—ã –ø–æ–∑–∂–µ).\n–ï—Å–ª–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —É—Ç–æ—á–Ω–∏ –∏–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?üè¢")	

async def town_lead(message : types.Message, state : FSMContext):
	async with state.proxy() as data:
		data['town'] = message.text
	if 	message.text == '–ö–∞–∑–∞–Ω—å' or message.text == '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥' or message.text == '–£–ª—å—è–Ω–æ–≤—Å–∫' or message.text == 'Kazan' or message.text == '–ù–∏–∂–Ω–∏–π' or message.text == '—É–ª—å—è–Ω–æ–≤—Å–∫' or message.text == '–∫–∞–∑–∞–Ω—å' or message.text == 'kazan' or message.text == '–Ω–∏–∂–Ω–∏–π':
			await FSMlead.next()
			await message.reply("–ú—ã —Ä–∞–¥—ã –≤—Å–µ–º, –Ω–æ –≤ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –æ—Ç 18 –¥–æ 25 –ª–µ—Ç.üèãÔ∏è‚Äç‚ôÄÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Å–∫–∞–∂–∏ —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç?")	
	else:
		await message.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã–ª–∏—Å—å –≤ —Ç–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ. –ú–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –ø–æ–∑–∂–µ")
		await state.finish()	

async def age_lead(message : types.Message, state : FSMContext):
	async with state.proxy() as data:
		data['age'] = message.text
	if message.text == '18' or message.text == '19' or message.text == '20' or message.text == '21' or message.text == '22' or message.text == '23' or message.text == '24' or message.text == '25':
			await FSMlead.next()
			await message.reply("–û—á–µ–Ω—å —Ä–∞–¥, —á—Ç–æ —Ç—ã —Ä–µ—à–∏–ª–∞ —Å –Ω–∞–º–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è‚ò∫Ô∏è –ù–∏–∂–µ, —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—è–º–∏ –∏ —É—Å–ª–æ–≤–∏—è–º–∏ —Ä–∞–±–æ—Ç—ãüí∏üë®‚Äçü¶Ø\n\n–û–ë–Ø–ó–ê–ù–ù–û–°–¢–ò:\n–í —Ç–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏, –∫–∞–∫ –º–æ–¥–µ–ª–∏üë∏üèº, –≤—Ö–æ–¥–∏—Ç —É—á–∞—Å—Ç–∏–µ –≤ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è—Öüì∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∏–¥–µ–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤üé• –¥–ª—è —Ä–µ–∫–ª–∞–º—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —à–æ—É—Ä—É–º–æ–≤üëó –∏–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤.\n\n–£–°–õ–û–í–ò–Ø:\n–¢–≤–æ–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –≤ —Ç–≤–æ–∏—Ö —Ä—É–∫–∞—Öüëê. –î–ª—è –Ω–∞—Å –≤–∞–∂–Ω–æ, —á—Ç–æ–± –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–æ—Ä–º–∞ —á–∞—Å–æ–≤, –∞ –∏–º–µ–Ω–Ω–æ, 6 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å –∏ 30 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é‚è≥–í—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Ä–µ—à–∞–µ—à—å —Ç—ãü§å\n–¢–≤–æ—è –∑–∞—Ä–ø–ª–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤ + –±–æ–Ω—É—Å –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ –º–µ—Å—è—Üü§ù.\n–ú—ã —Ä–∞–¥—ã –Ω–æ–≤—ã–º –º–æ–¥–µ–ª—è–º –∏ –ø–æ—ç—Ç–æ–º—É –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–ª–∏ –æ–±—É—á–µ–Ω–∏–µüßö‚Äç‚ôÄÔ∏è. –î–ª–∏—Ç—Å—è –æ–Ω–æ 5 –¥–Ω–µ–π. –ò, –æ—Ç–º–µ—á—É, —á—Ç–æ –æ–±—É—á–µ–Ω–∏–µ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—èüíµ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –≤ –∫–æ–Ω—Ü–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—èüòç")
			await asyncio.sleep(10)
			await bot.send_message(message.from_user.id, "–ï—Å–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞, –Ω–∞–ø–∏—à–∏ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –Ω–∞–º–∏ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞üì≤.")
	else:
		await bot.send_message(message.from_user.id, "–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤–∞–∫–∞–Ω—Å–∏—è —Ç–µ–±—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞, –Ω–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Å–∏–ª—É –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–≤–æ—é –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—É –Ω–µ —Å–º–æ–∂–µ–º.")
		await state.finish()		
	

async def phone_lead(message : types.Contact, state : FSMContext):
	async with state.proxy() as data:
		data['phone'] = message.text 	
	await rekruter_data.sql_leads_add(state)
	await state.finish()
	await bot.send_message(message.from_user.id, "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ü§ù. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")	



def register_handlers_models(dp : Dispatcher):
	dp.register_message_handler(firs_event, commands=['start'],state=None)
	dp.register_message_handler(name_lead, state=FSMlead.name)
	dp.register_message_handler(town_lead, state=FSMlead.town)
	dp.register_message_handler(age_lead, state=FSMlead.age)
	dp.register_message_handler(phone_lead, state=FSMlead.phone)
	
	

# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ 1. (–û –∫–æ–º–ø–∞–Ω–∏–∏ - "–ù–∞—à –¥—Ä—É–∂–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ç–∏–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 2014 –≥–æ–¥–∞, –±—ã—Å—Ç—Ä–æ –∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–æ–µ–≤–∞–ª –¥–æ–≤–µ—Ä–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –∏ –±—Ä–µ–Ω–¥–æ–≤.") 2. (–ù–∞—à —Å–∞–π—Ç - "http://style-models.ru")
